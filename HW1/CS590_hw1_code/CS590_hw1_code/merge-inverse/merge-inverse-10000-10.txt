Timer (generate): 0ms real	0ms user	0ms sys
[ 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 1000 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 999 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 999 999 1000 1000 1000 1000 ]
[ 999 999 999 999 999 999 999 1000 1000 1000 ]
[ 999 999 999 999 999 999 999 999 1000 1000 ]
[ 999 999 999 999 999 999 999 999 999 1000 ]
[ 999 999 999 999 999 999 999 999 999 999 ]
[ 998 999 999 999 999 999 999 999 999 999 ]
[ 998 998 999 999 999 999 999 999 999 999 ]
[ 998 998 998 999 999 999 999 999 999 999 ]
[ 998 998 998 998 999 999 999 999 999 999 ]
[ 998 998 998 998 998 999 999 999 999 999 ]
[ 998 998 998 998 998 998 999 999 999 999 ]
[ 998 998 998 998 998 998 998 999 999 999 ]
[ 998 998 998 998 998 998 998 998 999 999 ]
[ 998 998 998 998 998 998 998 998 998 999 ]

Running merge sort algorithm: 
Timer (sort): 1ms real	0ms user	0ms sys
The output is sorted!
[ 0 0 0 0 0 0 0 0 0 1 ]
[ 0 0 0 0 0 0 0 0 1 1 ]
[ 0 0 0 0 0 0 0 1 1 1 ]
[ 0 0 0 0 0 0 1 1 1 1 ]
[ 0 0 0 0 0 1 1 1 1 1 ]
[ 0 0 0 0 1 1 1 1 1 1 ]
[ 0 0 0 1 1 1 1 1 1 1 ]
[ 0 0 1 1 1 1 1 1 1 1 ]
[ 0 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 2 ]
[ 1 1 1 1 1 1 1 1 2 2 ]
[ 1 1 1 1 1 1 1 2 2 2 ]
[ 1 1 1 1 1 1 2 2 2 2 ]
[ 1 1 1 1 1 2 2 2 2 2 ]
[ 1 1 1 1 2 2 2 2 2 2 ]
[ 1 1 1 2 2 2 2 2 2 2 ]
[ 1 1 2 2 2 2 2 2 2 2 ]
[ 1 2 2 2 2 2 2 2 2 2 ]
[ 2 2 2 2 2 2 2 2 2 2 ]

Timer (generate): 0ms real	0ms user	0ms sys
[ 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 1000 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 999 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 999 999 1000 1000 1000 1000 ]
[ 999 999 999 999 999 999 999 1000 1000 1000 ]
[ 999 999 999 999 999 999 999 999 1000 1000 ]
[ 999 999 999 999 999 999 999 999 999 1000 ]
[ 999 999 999 999 999 999 999 999 999 999 ]
[ 998 999 999 999 999 999 999 999 999 999 ]
[ 998 998 999 999 999 999 999 999 999 999 ]
[ 998 998 998 999 999 999 999 999 999 999 ]
[ 998 998 998 998 999 999 999 999 999 999 ]
[ 998 998 998 998 998 999 999 999 999 999 ]
[ 998 998 998 998 998 998 999 999 999 999 ]
[ 998 998 998 998 998 998 998 999 999 999 ]
[ 998 998 998 998 998 998 998 998 999 999 ]
[ 998 998 998 998 998 998 998 998 998 999 ]

Running merge sort algorithm: 
Timer (sort): 2ms real	0ms user	0ms sys
The output is sorted!
[ 0 0 0 0 0 0 0 0 0 1 ]
[ 0 0 0 0 0 0 0 0 1 1 ]
[ 0 0 0 0 0 0 0 1 1 1 ]
[ 0 0 0 0 0 0 1 1 1 1 ]
[ 0 0 0 0 0 1 1 1 1 1 ]
[ 0 0 0 0 1 1 1 1 1 1 ]
[ 0 0 0 1 1 1 1 1 1 1 ]
[ 0 0 1 1 1 1 1 1 1 1 ]
[ 0 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 2 ]
[ 1 1 1 1 1 1 1 1 2 2 ]
[ 1 1 1 1 1 1 1 2 2 2 ]
[ 1 1 1 1 1 1 2 2 2 2 ]
[ 1 1 1 1 1 2 2 2 2 2 ]
[ 1 1 1 1 2 2 2 2 2 2 ]
[ 1 1 1 2 2 2 2 2 2 2 ]
[ 1 1 2 2 2 2 2 2 2 2 ]
[ 1 2 2 2 2 2 2 2 2 2 ]
[ 2 2 2 2 2 2 2 2 2 2 ]

Timer (generate): 0ms real	0ms user	0ms sys
[ 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 1000 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 999 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 999 999 1000 1000 1000 1000 ]
[ 999 999 999 999 999 999 999 1000 1000 1000 ]
[ 999 999 999 999 999 999 999 999 1000 1000 ]
[ 999 999 999 999 999 999 999 999 999 1000 ]
[ 999 999 999 999 999 999 999 999 999 999 ]
[ 998 999 999 999 999 999 999 999 999 999 ]
[ 998 998 999 999 999 999 999 999 999 999 ]
[ 998 998 998 999 999 999 999 999 999 999 ]
[ 998 998 998 998 999 999 999 999 999 999 ]
[ 998 998 998 998 998 999 999 999 999 999 ]
[ 998 998 998 998 998 998 999 999 999 999 ]
[ 998 998 998 998 998 998 998 999 999 999 ]
[ 998 998 998 998 998 998 998 998 999 999 ]
[ 998 998 998 998 998 998 998 998 998 999 ]

Running merge sort algorithm: 
Timer (sort): 2ms real	0ms user	0ms sys
The output is sorted!
[ 0 0 0 0 0 0 0 0 0 1 ]
[ 0 0 0 0 0 0 0 0 1 1 ]
[ 0 0 0 0 0 0 0 1 1 1 ]
[ 0 0 0 0 0 0 1 1 1 1 ]
[ 0 0 0 0 0 1 1 1 1 1 ]
[ 0 0 0 0 1 1 1 1 1 1 ]
[ 0 0 0 1 1 1 1 1 1 1 ]
[ 0 0 1 1 1 1 1 1 1 1 ]
[ 0 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 2 ]
[ 1 1 1 1 1 1 1 1 2 2 ]
[ 1 1 1 1 1 1 1 2 2 2 ]
[ 1 1 1 1 1 1 2 2 2 2 ]
[ 1 1 1 1 1 2 2 2 2 2 ]
[ 1 1 1 1 2 2 2 2 2 2 ]
[ 1 1 1 2 2 2 2 2 2 2 ]
[ 1 1 2 2 2 2 2 2 2 2 ]
[ 1 2 2 2 2 2 2 2 2 2 ]
[ 2 2 2 2 2 2 2 2 2 2 ]

Timer (generate): 0ms real	0ms user	0ms sys
[ 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 1000 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 999 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 999 999 1000 1000 1000 1000 ]
[ 999 999 999 999 999 999 999 1000 1000 1000 ]
[ 999 999 999 999 999 999 999 999 1000 1000 ]
[ 999 999 999 999 999 999 999 999 999 1000 ]
[ 999 999 999 999 999 999 999 999 999 999 ]
[ 998 999 999 999 999 999 999 999 999 999 ]
[ 998 998 999 999 999 999 999 999 999 999 ]
[ 998 998 998 999 999 999 999 999 999 999 ]
[ 998 998 998 998 999 999 999 999 999 999 ]
[ 998 998 998 998 998 999 999 999 999 999 ]
[ 998 998 998 998 998 998 999 999 999 999 ]
[ 998 998 998 998 998 998 998 999 999 999 ]
[ 998 998 998 998 998 998 998 998 999 999 ]
[ 998 998 998 998 998 998 998 998 998 999 ]

Running merge sort algorithm: 
Timer (sort): 1ms real	0ms user	0ms sys
The output is sorted!
[ 0 0 0 0 0 0 0 0 0 1 ]
[ 0 0 0 0 0 0 0 0 1 1 ]
[ 0 0 0 0 0 0 0 1 1 1 ]
[ 0 0 0 0 0 0 1 1 1 1 ]
[ 0 0 0 0 0 1 1 1 1 1 ]
[ 0 0 0 0 1 1 1 1 1 1 ]
[ 0 0 0 1 1 1 1 1 1 1 ]
[ 0 0 1 1 1 1 1 1 1 1 ]
[ 0 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 2 ]
[ 1 1 1 1 1 1 1 1 2 2 ]
[ 1 1 1 1 1 1 1 2 2 2 ]
[ 1 1 1 1 1 1 2 2 2 2 ]
[ 1 1 1 1 1 2 2 2 2 2 ]
[ 1 1 1 1 2 2 2 2 2 2 ]
[ 1 1 1 2 2 2 2 2 2 2 ]
[ 1 1 2 2 2 2 2 2 2 2 ]
[ 1 2 2 2 2 2 2 2 2 2 ]
[ 2 2 2 2 2 2 2 2 2 2 ]

Timer (generate): 1ms real	0ms user	0ms sys
[ 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 1000 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 999 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 999 999 1000 1000 1000 1000 ]
[ 999 999 999 999 999 999 999 1000 1000 1000 ]
[ 999 999 999 999 999 999 999 999 1000 1000 ]
[ 999 999 999 999 999 999 999 999 999 1000 ]
[ 999 999 999 999 999 999 999 999 999 999 ]
[ 998 999 999 999 999 999 999 999 999 999 ]
[ 998 998 999 999 999 999 999 999 999 999 ]
[ 998 998 998 999 999 999 999 999 999 999 ]
[ 998 998 998 998 999 999 999 999 999 999 ]
[ 998 998 998 998 998 999 999 999 999 999 ]
[ 998 998 998 998 998 998 999 999 999 999 ]
[ 998 998 998 998 998 998 998 999 999 999 ]
[ 998 998 998 998 998 998 998 998 999 999 ]
[ 998 998 998 998 998 998 998 998 998 999 ]

Running merge sort algorithm: 
Timer (sort): 2ms real	0ms user	0ms sys
The output is sorted!
[ 0 0 0 0 0 0 0 0 0 1 ]
[ 0 0 0 0 0 0 0 0 1 1 ]
[ 0 0 0 0 0 0 0 1 1 1 ]
[ 0 0 0 0 0 0 1 1 1 1 ]
[ 0 0 0 0 0 1 1 1 1 1 ]
[ 0 0 0 0 1 1 1 1 1 1 ]
[ 0 0 0 1 1 1 1 1 1 1 ]
[ 0 0 1 1 1 1 1 1 1 1 ]
[ 0 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 2 ]
[ 1 1 1 1 1 1 1 1 2 2 ]
[ 1 1 1 1 1 1 1 2 2 2 ]
[ 1 1 1 1 1 1 2 2 2 2 ]
[ 1 1 1 1 1 2 2 2 2 2 ]
[ 1 1 1 1 2 2 2 2 2 2 ]
[ 1 1 1 2 2 2 2 2 2 2 ]
[ 1 1 2 2 2 2 2 2 2 2 ]
[ 1 2 2 2 2 2 2 2 2 2 ]
[ 2 2 2 2 2 2 2 2 2 2 ]

Timer (generate): 1ms real	0ms user	0ms sys
[ 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 1000 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 999 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 999 999 1000 1000 1000 1000 ]
[ 999 999 999 999 999 999 999 1000 1000 1000 ]
[ 999 999 999 999 999 999 999 999 1000 1000 ]
[ 999 999 999 999 999 999 999 999 999 1000 ]
[ 999 999 999 999 999 999 999 999 999 999 ]
[ 998 999 999 999 999 999 999 999 999 999 ]
[ 998 998 999 999 999 999 999 999 999 999 ]
[ 998 998 998 999 999 999 999 999 999 999 ]
[ 998 998 998 998 999 999 999 999 999 999 ]
[ 998 998 998 998 998 999 999 999 999 999 ]
[ 998 998 998 998 998 998 999 999 999 999 ]
[ 998 998 998 998 998 998 998 999 999 999 ]
[ 998 998 998 998 998 998 998 998 999 999 ]
[ 998 998 998 998 998 998 998 998 998 999 ]

Running merge sort algorithm: 
Timer (sort): 2ms real	0ms user	0ms sys
The output is sorted!
[ 0 0 0 0 0 0 0 0 0 1 ]
[ 0 0 0 0 0 0 0 0 1 1 ]
[ 0 0 0 0 0 0 0 1 1 1 ]
[ 0 0 0 0 0 0 1 1 1 1 ]
[ 0 0 0 0 0 1 1 1 1 1 ]
[ 0 0 0 0 1 1 1 1 1 1 ]
[ 0 0 0 1 1 1 1 1 1 1 ]
[ 0 0 1 1 1 1 1 1 1 1 ]
[ 0 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 2 ]
[ 1 1 1 1 1 1 1 1 2 2 ]
[ 1 1 1 1 1 1 1 2 2 2 ]
[ 1 1 1 1 1 1 2 2 2 2 ]
[ 1 1 1 1 1 2 2 2 2 2 ]
[ 1 1 1 1 2 2 2 2 2 2 ]
[ 1 1 1 2 2 2 2 2 2 2 ]
[ 1 1 2 2 2 2 2 2 2 2 ]
[ 1 2 2 2 2 2 2 2 2 2 ]
[ 2 2 2 2 2 2 2 2 2 2 ]

Timer (generate): 0ms real	0ms user	0ms sys
[ 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 1000 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 999 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 999 999 1000 1000 1000 1000 ]
[ 999 999 999 999 999 999 999 1000 1000 1000 ]
[ 999 999 999 999 999 999 999 999 1000 1000 ]
[ 999 999 999 999 999 999 999 999 999 1000 ]
[ 999 999 999 999 999 999 999 999 999 999 ]
[ 998 999 999 999 999 999 999 999 999 999 ]
[ 998 998 999 999 999 999 999 999 999 999 ]
[ 998 998 998 999 999 999 999 999 999 999 ]
[ 998 998 998 998 999 999 999 999 999 999 ]
[ 998 998 998 998 998 999 999 999 999 999 ]
[ 998 998 998 998 998 998 999 999 999 999 ]
[ 998 998 998 998 998 998 998 999 999 999 ]
[ 998 998 998 998 998 998 998 998 999 999 ]
[ 998 998 998 998 998 998 998 998 998 999 ]

Running merge sort algorithm: 
Timer (sort): 1ms real	0ms user	0ms sys
The output is sorted!
[ 0 0 0 0 0 0 0 0 0 1 ]
[ 0 0 0 0 0 0 0 0 1 1 ]
[ 0 0 0 0 0 0 0 1 1 1 ]
[ 0 0 0 0 0 0 1 1 1 1 ]
[ 0 0 0 0 0 1 1 1 1 1 ]
[ 0 0 0 0 1 1 1 1 1 1 ]
[ 0 0 0 1 1 1 1 1 1 1 ]
[ 0 0 1 1 1 1 1 1 1 1 ]
[ 0 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 2 ]
[ 1 1 1 1 1 1 1 1 2 2 ]
[ 1 1 1 1 1 1 1 2 2 2 ]
[ 1 1 1 1 1 1 2 2 2 2 ]
[ 1 1 1 1 1 2 2 2 2 2 ]
[ 1 1 1 1 2 2 2 2 2 2 ]
[ 1 1 1 2 2 2 2 2 2 2 ]
[ 1 1 2 2 2 2 2 2 2 2 ]
[ 1 2 2 2 2 2 2 2 2 2 ]
[ 2 2 2 2 2 2 2 2 2 2 ]

Timer (generate): 1ms real	0ms user	0ms sys
[ 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 1000 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 999 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 999 999 1000 1000 1000 1000 ]
[ 999 999 999 999 999 999 999 1000 1000 1000 ]
[ 999 999 999 999 999 999 999 999 1000 1000 ]
[ 999 999 999 999 999 999 999 999 999 1000 ]
[ 999 999 999 999 999 999 999 999 999 999 ]
[ 998 999 999 999 999 999 999 999 999 999 ]
[ 998 998 999 999 999 999 999 999 999 999 ]
[ 998 998 998 999 999 999 999 999 999 999 ]
[ 998 998 998 998 999 999 999 999 999 999 ]
[ 998 998 998 998 998 999 999 999 999 999 ]
[ 998 998 998 998 998 998 999 999 999 999 ]
[ 998 998 998 998 998 998 998 999 999 999 ]
[ 998 998 998 998 998 998 998 998 999 999 ]
[ 998 998 998 998 998 998 998 998 998 999 ]

Running merge sort algorithm: 
Timer (sort): 1ms real	0ms user	0ms sys
The output is sorted!
[ 0 0 0 0 0 0 0 0 0 1 ]
[ 0 0 0 0 0 0 0 0 1 1 ]
[ 0 0 0 0 0 0 0 1 1 1 ]
[ 0 0 0 0 0 0 1 1 1 1 ]
[ 0 0 0 0 0 1 1 1 1 1 ]
[ 0 0 0 0 1 1 1 1 1 1 ]
[ 0 0 0 1 1 1 1 1 1 1 ]
[ 0 0 1 1 1 1 1 1 1 1 ]
[ 0 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 2 ]
[ 1 1 1 1 1 1 1 1 2 2 ]
[ 1 1 1 1 1 1 1 2 2 2 ]
[ 1 1 1 1 1 1 2 2 2 2 ]
[ 1 1 1 1 1 2 2 2 2 2 ]
[ 1 1 1 1 2 2 2 2 2 2 ]
[ 1 1 1 2 2 2 2 2 2 2 ]
[ 1 1 2 2 2 2 2 2 2 2 ]
[ 1 2 2 2 2 2 2 2 2 2 ]
[ 2 2 2 2 2 2 2 2 2 2 ]

Timer (generate): 0ms real	0ms user	0ms sys
[ 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 1000 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 999 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 999 999 1000 1000 1000 1000 ]
[ 999 999 999 999 999 999 999 1000 1000 1000 ]
[ 999 999 999 999 999 999 999 999 1000 1000 ]
[ 999 999 999 999 999 999 999 999 999 1000 ]
[ 999 999 999 999 999 999 999 999 999 999 ]
[ 998 999 999 999 999 999 999 999 999 999 ]
[ 998 998 999 999 999 999 999 999 999 999 ]
[ 998 998 998 999 999 999 999 999 999 999 ]
[ 998 998 998 998 999 999 999 999 999 999 ]
[ 998 998 998 998 998 999 999 999 999 999 ]
[ 998 998 998 998 998 998 999 999 999 999 ]
[ 998 998 998 998 998 998 998 999 999 999 ]
[ 998 998 998 998 998 998 998 998 999 999 ]
[ 998 998 998 998 998 998 998 998 998 999 ]

Running merge sort algorithm: 
Timer (sort): 1ms real	0ms user	0ms sys
The output is sorted!
[ 0 0 0 0 0 0 0 0 0 1 ]
[ 0 0 0 0 0 0 0 0 1 1 ]
[ 0 0 0 0 0 0 0 1 1 1 ]
[ 0 0 0 0 0 0 1 1 1 1 ]
[ 0 0 0 0 0 1 1 1 1 1 ]
[ 0 0 0 0 1 1 1 1 1 1 ]
[ 0 0 0 1 1 1 1 1 1 1 ]
[ 0 0 1 1 1 1 1 1 1 1 ]
[ 0 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 2 ]
[ 1 1 1 1 1 1 1 1 2 2 ]
[ 1 1 1 1 1 1 1 2 2 2 ]
[ 1 1 1 1 1 1 2 2 2 2 ]
[ 1 1 1 1 1 2 2 2 2 2 ]
[ 1 1 1 1 2 2 2 2 2 2 ]
[ 1 1 1 2 2 2 2 2 2 2 ]
[ 1 1 2 2 2 2 2 2 2 2 ]
[ 1 2 2 2 2 2 2 2 2 2 ]
[ 2 2 2 2 2 2 2 2 2 2 ]

Timer (generate): 0ms real	0ms user	0ms sys
[ 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 1000 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 1000 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 1000 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 1000 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 999 1000 1000 1000 1000 1000 ]
[ 999 999 999 999 999 999 1000 1000 1000 1000 ]
[ 999 999 999 999 999 999 999 1000 1000 1000 ]
[ 999 999 999 999 999 999 999 999 1000 1000 ]
[ 999 999 999 999 999 999 999 999 999 1000 ]
[ 999 999 999 999 999 999 999 999 999 999 ]
[ 998 999 999 999 999 999 999 999 999 999 ]
[ 998 998 999 999 999 999 999 999 999 999 ]
[ 998 998 998 999 999 999 999 999 999 999 ]
[ 998 998 998 998 999 999 999 999 999 999 ]
[ 998 998 998 998 998 999 999 999 999 999 ]
[ 998 998 998 998 998 998 999 999 999 999 ]
[ 998 998 998 998 998 998 998 999 999 999 ]
[ 998 998 998 998 998 998 998 998 999 999 ]
[ 998 998 998 998 998 998 998 998 998 999 ]

Running merge sort algorithm: 
Timer (sort): 1ms real	0ms user	0ms sys
The output is sorted!
[ 0 0 0 0 0 0 0 0 0 1 ]
[ 0 0 0 0 0 0 0 0 1 1 ]
[ 0 0 0 0 0 0 0 1 1 1 ]
[ 0 0 0 0 0 0 1 1 1 1 ]
[ 0 0 0 0 0 1 1 1 1 1 ]
[ 0 0 0 0 1 1 1 1 1 1 ]
[ 0 0 0 1 1 1 1 1 1 1 ]
[ 0 0 1 1 1 1 1 1 1 1 ]
[ 0 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 1 ]
[ 1 1 1 1 1 1 1 1 1 2 ]
[ 1 1 1 1 1 1 1 1 2 2 ]
[ 1 1 1 1 1 1 1 2 2 2 ]
[ 1 1 1 1 1 1 2 2 2 2 ]
[ 1 1 1 1 1 2 2 2 2 2 ]
[ 1 1 1 1 2 2 2 2 2 2 ]
[ 1 1 1 2 2 2 2 2 2 2 ]
[ 1 1 2 2 2 2 2 2 2 2 ]
[ 1 2 2 2 2 2 2 2 2 2 ]
[ 2 2 2 2 2 2 2 2 2 2 ]

